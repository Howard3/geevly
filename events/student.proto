syntax = "proto3";
package events.student;
option go_package = "geevly/eda";

import "metadata.proto";

message Student {
    string first_name = 1;
    string last_name = 2;
    Date date_of_birth = 3;
    string school_id = 4;
    Date date_of_enrollment = 5;
    Status status = 6;
    events.metadata.Metadata metadata = 7;
    bytes code_unique_id = 8; // used for qr code lookup
    string student_school_id = 9; // this is the id of the student that was issued by the school.

    repeated Report reports = 10;
    repeated Feeding feedings = 11;

    enum Status {
        UNKNOWN = 0;
        ACTIVE = 1;
        INACTIVE = 2;
    }


    //
    // Commands, Events, and Responses 
    //
    // Feeding records a student's feeding
    message Feeding {
        Date date = 1;

        message Event {
            Date date = 1;
        }
    }


    // Report a student's results 
    message Report {
        int32 bmi = 1;
        int32 height_cm = 2;
        int32 attendance_pct = 3;
        Date test_date = 4;

        message Event {
            int32 bmi = 1;
            int32 height_cm = 2;
            int32 attendance_pct = 3;
            Date test_date = 4;
        }

    }

    // Create a new student
    message Create {
        string first_name = 1;
        string last_name = 2;
        Date date_of_birth = 3;
        string student_school_id = 4;
        events.metadata.Metadata metadata = 7;

        message Event {
            string first_name = 1;
            string last_name = 2;
            Date date_of_birth = 3;
            Status status = 4;
            uint64 version = 5;
        }
    }
    // Update a student's information
    message Update {
        string first_name = 2;
        string last_name = 3;
        Date date_of_birth = 4;
        uint64 version = 5;
        events.metadata.Metadata metadata = 6;
        string student_school_id = 7;

        message Event {
            reserved 1;
            string first_name = 2;
            string last_name = 3;
            Date date_of_birth = 4;
            reserved 5;
            string student_school_id = 6;
        }
    }

    // Set a student's status
    message SetStatus {
        Status status = 2;
        uint64 version = 3;
        events.metadata.Metadata metadata = 4;

        message Event {
            Status status = 2;
            uint64 version = 3;
        }
    }

    // Enroll a student
    message Enroll {
        string school_id = 2;
        Date date_of_enrollment = 3;
        uint64 version = 4;
        events.metadata.Metadata metadata = 5;

        message Event {
            string school_id = 2;
            Date date_of_enrollment = 3;
            uint64 version = 4;
        }
    }

    message Unenroll {
        uint64 version = 2;
        events.metadata.Metadata metadata = 3;

        message Event {}
    }

    message SetLookupCode {
        uint64 version = 2;
        events.metadata.Metadata metadata = 3;
        bytes code_unique_id = 4;

        message Event {
            bytes code_unique_id = 1;
            events.metadata.Metadata metadata = 2;
        }
    }
}



// Represents a whole or partial calendar date, such as a birthday. The time of
// day and time zone are either specified elsewhere or are insignificant. The
// date is relative to the Gregorian Calendar. This can represent one of the
// following:
//
// * A full date, with non-zero year, month, and day values
// * A month and day value, with a zero year, such as an anniversary
// * A year on its own, with zero month and day values
// * A year and month value, with a zero day, such as a credit card expiration
// date
//
// Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and
// `google.protobuf.Timestamp`.
message Date {
  // Year of the date. Must be from 1 to 9999, or 0 to specify a date without
  // a year.
  int32 year = 1;

  // Month of a year. Must be from 1 to 12, or 0 to specify a year without a
  // month and day.
  int32 month = 2;

  // Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
  // to specify a year by itself or a year and month where the day isn't
  // significant.
  int32 day = 3;
}
