syntax = "proto3";
package events.user;
option go_package = "geevly/eda";

import "metadata.proto";
import "google/protobuf/timestamp.proto";


// User Represents a user in the systems and commands, events, and responses that are associated with users.
message User {
    string email = 1; // The email address of the user
    Name name = 2; // The name of the user
    events.metadata.Metadata metadata = 3;

    repeated Role roles = 4;
    uint64 next_role_id = 5; // The next role id to use when adding a role to the user, internal autoincrement

    google.protobuf.Timestamp LastPasswordChange = 6; // The last time the user changed their PasswordChange
    bool active = 7; // Whether the user is active or not

    message Role {
        uint64 id = 1;
        Type type = 2;
        string school_id = 3; // Only for SCHOOL_ADMIN and FEEDER_USER

        enum Type {
            UNKNOWN = 0;
            SYSTEM_ADMIN = 1;
            SCHOOL_ADMIN = 2;
            FEEDER_USER = 3;
        }
    }

    message Name {
        string first = 1;
        string last = 2;
    }

    message Create {
        string email = 1;
        string first_name = 2;
        string last_name = 3;
        string password = 4; // Not stored in the user object, for security reasons

        events.metadata.Metadata metadata = 5;

        message Event {
            string email = 1;
            string first_name = 2;
            string last_name = 3;
        } 

    }

    message PasswordChange {
        string password = 1; // Not stored in the user object, for security reasons

        events.metadata.Metadata metadata = 2;

        message Event {} 
    }

    message Update {
        string email = 1;
        string first_name = 2;
        string last_name = 3;
        uint64 version = 4;

        events.metadata.Metadata metadata = 5;

        message Event {
            string email = 1;
            string first_name = 2;
            string last_name = 3;
        } 

    }

    message SetActiveState {
        bool active = 1;
        uint64 version = 2;
        events.metadata.Metadata metadata = 3;

        message Event {
            bool active = 1;
        } 

    }

    message AddRole {
        Role role = 1;

        events.metadata.Metadata metadata = 2;

        message Event {
            Role role = 1;
            uint64 role_id = 2;
        } 

    }

    message RemoveRole {
        uint64 role_id = 1;

        events.metadata.Metadata metadata = 2;

        message Event {
            uint64 role_id = 1;
        } 

    }
}

