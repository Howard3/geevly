package usertempl 

import (
	"geevly/internal/webapi/templates/components"
	"fmt"
)

type User struct {
	ID        string `json:"id"`
	Username  string `json:"username"`
	Name      string `json:"name"`
	Active    bool   `json:"active"`
	IsAdmin   bool   `json:"is_admin"`
	IsFeeder  bool   `json:"is_feeder"`
}

type ListResponse struct {
	Users []User `json:"users"`
	Pagination components.Pagination `json:"pagination"`
}

templ List(users *ListResponse, pagination components.Pagination) {
	<div class="flex items-center justify-between p-4 border-b bg-gray-100">
		<h1 class="text-lg font-medium">
			Users
			<span class="pl-3">
				@components.PrimaryButton("Add User", templ.Attributes{"hx-get": "/admin/user/create"})
			</span>
		</h1>
		<div class="flex items-center">
			<input type="text" name="search" placeholder="Search users..." class="px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500" hx-get="/admin/user"/>
			<button type="button" class="px-4 py-2 bg-blue-500 text-white rounded-r-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500" hx-get="/admin/user" hx-include="[name='search']">
				Search
			</button>
		</div>
	</div>
	if users != nil {
		<div class="flex flex-col gap-2">
			<div class="relative w-full overflow-auto">
				<table class="w-full caption-bottom text-sm">
					<thead class="[&_tr]:border-b">
						<tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
							<th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-sm">
								Name
							</th>
							<th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-sm">
								Username
							</th>
							<th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-sm">
								Active 
							</th>
							<th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-sm">
							Roles	
							</th>
							<th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-sm">
								Actions 
							</th>
						</tr>
					</thead>
					<tbody class="[&_tr:last-child]:border-0">
						for _, user := range users.Users {
							<tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted rounded-lg font-medium">
								<td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-sm">
									{ user.Name }
								</td>
								<td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-sm">
									{ user.Username }
								</td>
								<td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-sm">
									if user.Active {
										<span class="text-green-500">Active</span>
									} else {
										<span class="text-red-500">Inactive</span>
									}
								</td>
								<td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-sm flex gap-2">
									if user.IsAdmin {
										<span class="inline-flex items-center rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">Admin</span>
									}
									if user.IsFeeder {
										<span class="inline-flex items-center rounded-full bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-600/20">Feeder</span>
									}
								</td>
								<td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-sm">
									@components.PrimaryButton("View", templ.Attributes{"hx-get": fmt.Sprintf("/admin/user/%v", user.ID)})
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="flex w-full min-w-0 items-center justify-between text-sm">
			<div class="flex items-center gap-2 p-3">
				@components.ItemCounter(pagination)
			</div>
		</div>
	} else {
		<div class="flex items-center justify-center p-4">
			<p class="text-lg font-medium text-muted-foreground">No users found</p>
		</div>
	}
}
